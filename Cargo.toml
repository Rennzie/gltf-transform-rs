[package]
name = "gltf-transform-rs"
version = "0.1.0"
authors = ["David Harvey-Macaulay <alteous@outlook.com>", "Sean Rennie <rnnsea001@gmail.com>"]
description = "glTF 2.0 manipulation library"
# documentation = "https://docs.rs/gltf"
# repository = "https://github.com/gltf-rs/gltf"
# homepage = "https://github.com/gltf-rs/gltf"
readme = "README.md"
keywords = ["glTF", "3D", "asset", "model", "scene"]
license = "MIT OR Apache-2.0"
include = ["**/*.rs", "Cargo.toml", "LICENSE-*"]
edition = "2018"

# [badges]
# travis-ci = { repository = "gltf-rs/gltf" }

[dev-dependencies]
approx = "0.5"

[dependencies]
base64 = { optional = true, version = "0.21.0" }
byteorder = "1.3"
gltf-json = {version="1.1.0", features=['extras']}
lazy_static = "1"
urlencoding = { optional = true, version = "2.1" }
bytemuck = "1.13.1"
rayon = "1.7.0"

[dependencies.image]
default-features = false
features = ["jpeg", "png"]
optional = true
version = "0.24"

[features]
default = ["import", "utils", "export", "names"]
extras = ["gltf-json/extras"]
names = ["gltf-json/names"]
utils = []
import = ["base64", "image", "urlencoding"]
export = ["base64", "image", "urlencoding"]
KHR_lights_punctual = ["gltf-json/KHR_lights_punctual"]
KHR_materials_pbrSpecularGlossiness = ["gltf-json/KHR_materials_pbrSpecularGlossiness"]
KHR_materials_unlit = ["gltf-json/KHR_materials_unlit"]
KHR_texture_transform = ["gltf-json/KHR_texture_transform"]
KHR_materials_transmission = ["gltf-json/KHR_materials_transmission"]
KHR_materials_ior = ["gltf-json/KHR_materials_ior"]
KHR_materials_variants = ["gltf-json/KHR_materials_variants"]
KHR_materials_volume = ["gltf-json/KHR_materials_volume"]
KHR_materials_specular = ["gltf-json/KHR_materials_specular"]
image_jpeg_rayon = ["image/jpeg_rayon"]
guess_mime_type = []

[[example]]
name = "gltf-display"
path = "examples/display/main.rs"

[[example]]
name = "gltf-export"
path = "examples/export/main.rs"

[[example]]
name = "gltf-roundtrip"
path = "examples/roundtrip/main.rs"

[[example]]
name = "gltf-tree"
path = "examples/tree/main.rs"

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]
